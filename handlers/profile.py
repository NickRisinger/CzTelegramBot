from aiogram import Router, F
from aiogram.types import Message, FSInputFile
# from database.database import get_user, create_user
from prisma import Prisma
from prisma.models import User

from utils.utils import format_date

router = Router()


async def get_user(tg_id: int) -> User:
    async with Prisma() as db:
        return await db.user.find_first(
            where={'tg_id': tg_id},
            include={'codes': True}
        )


@router.message(F.text == '–ü—Ä–æ—Ñ–∏–ª—å')
async def profile_handler(message: Message):
    user = await get_user(message.chat.id)

    profile_text = (
        f"üë§ <b>–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>\n\n"
        f"üÜî ID: {message.from_user.id}\n"
        f"üë§ Username: @{message.from_user.username}\n"
        f"‚≠êÔ∏è –û—Å—Ç–∞—Ç–æ–∫ –∫–æ–¥–æ–≤: {user.points}\n"
        f"üéü –í—Å–µ –∫–æ–¥—ã: {len(user.codes)}\n"
        f"üìÖ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {format_date(str(user.created_at))}"
    )

    await message.answer(profile_text)


@router.message(F.text == '–ü—Ä–∞–≤–∏–ª–∞ –∞–∫—Ü–∏–∏')
async def promotion_rules(message: Message):
    text = (
        "üìú <b>–ü—Ä–∞–≤–∏–ª–∞ –∞–∫—Ü–∏–∏:</b>\n\n"
        "1. –û–±–º–µ–Ω–∏–≤–∞–π—Ç–µ –±–∞–ª–ª—ã –Ω–∞ –ø–æ–¥–∞—Ä–∫–∏.\n"
        "2. –ê–ª–∫–æ–≥–æ–ª—å–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–Ω–∏–º.\n"
        "3. –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤ –ø—Ä–∏–∫—Ä–µ–ø–ª—ë–Ω–Ω–æ–º PDF-—Ñ–∞–π–ª–µ."
    )
    pdf = FSInputFile("./data/rules.pdf")

    await message.answer(text)
    await message.answer_document(document=pdf)
